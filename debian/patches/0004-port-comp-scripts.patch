Description: Port necessary pieces of the comp...pl scripts
 opaconfig uses the comp...pl scripts installed by individual packages
 to override its default behavior. This patch ports the necessary pieces
 to Debian. For the most part, this involves use of dpkg instead of rpm.
 .
 opa-fm (10.5.1.0-1-2ifs) UNRELEASED; urgency=medium
 .
   * Ported functionality of comp_qlgc_fm.pl required by opaconfig to Debian.
 
Author: Brian T. Smith <bsmith@systemfabricworks.com>
Copyright: 2017 System Fabric Works, Inc. All Rights Reserved.
Forwarded: no
Last-Update: <2017-10-05>

---

--- a/CommonInstall/comp_qlgc_fm.pl
+++ b/CommonInstall/comp_qlgc_fm.pl
@@ -71,6 +71,10 @@
 
 sub available_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "available_opafm unimplemented\n";
+		exit(1);
+	}
 	my $srcdir=$ComponentInfo{'opafm'}{'SrcDir'};
 	my $rpmfile = file_glob("$srcdir/RPMS/*/opa-fm-*.rpm");
 	return ( -d "$srcdir" && -e "$rpmfile" );
@@ -79,20 +83,31 @@
 sub installed_opafm
 {
 	my $driver_subdir=$ComponentInfo{'opafm'}{'DriverSubdir'};
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		return dpkg_is_installed("opa-fm", "any");
+	}
 	return rpm_is_installed("opa-fm", "any");
 }
 
 # only called if installed_opafm is true
 sub installed_version_opafm
 {
-	my $fm_version = rpm_query_version_release_pkg("opa-fm");
-
+	my $fm_version;
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		$fm_version = dpkg_query_version_release_pkg("opa-fm");
+	} else {
+		$fm_version = rpm_query_version_release_pkg("opa-fm");
+	}
 	return dot_version("$fm_version");
 }
 
 # only called if available_opafm is true
 sub media_version_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "media_version_opafm unimplemented\n";
+		exit(1);
+	}
 	my $srcdir=$ComponentInfo{'opafm'}{'SrcDir'};
 	my $fm_rpmfile = file_glob("$srcdir/RPMS/*/opa-fm-*.rpm");
 	my $fm_version= rpm_query_version_release("$fm_rpmfile");
@@ -102,6 +117,10 @@
 
 sub build_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "build_opafm unimplemented\n";
+		exit(1);
+	}
 	my $osver = $_[0];
 	my $debug = $_[1];	# enable extra debug of build itself
 	my $build_temp = $_[2];	# temp area for use by build
@@ -113,6 +132,10 @@
 
 sub need_reinstall_opafm($$)
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "need_reinstall_opafm unimplemented\n";
+		exit(1);
+	}
 	my $install_list = shift();	# total that will be installed when done
 	my $installing_list = shift();	# what items are being installed/reinstalled
 
@@ -121,6 +144,10 @@
 
 sub preinstall_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "preinstall_opafm unimplemented\n";
+		exit(1);
+	}
 	my $install_list = $_[0];	# total that will be installed when done
 	my $installing_list = $_[1];	# what items are being installed/reinstalled
 	my $srcdir=$ComponentInfo{'opafm'}{'SrcDir'};
@@ -130,6 +157,10 @@
 
 sub install_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "install_opafm unimplemented\n";
+		exit(1);
+	}
 	my $install_list = $_[0];	# total that will be installed when done
 	my $installing_list = $_[1];	# what items are being installed/reinstalled
 
@@ -183,7 +214,12 @@
 	my $driver_subdir=$ComponentInfo{'opafm'}{'DriverSubdir'};
 	NormalPrint("Uninstalling $ComponentInfo{'opafm'}{'Name'}...\n");
 
-	rpm_uninstall_list("any", "verbose", ( "opa-fm", "opa-fm-debuginfo") );
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		dpkg_uninstall_list("any", "verbose", ( "opa-fm", "opa-fm-debuginfo") );
+	} else {
+		rpm_uninstall_list("any", "verbose", ( "opa-fm", "opa-fm-debuginfo") );
+	}
+
 	system("rm -rf $ROOT/usr/lib/opa/.comp_opafm.pl");
 	system("rmdir -p $ROOT/opt/iba/fm_tools 2>/dev/null");  # remove only if empty
 	system("rm -rf $ROOT/usr/lib/opa-fm");
@@ -192,6 +228,10 @@
 
 sub check_os_prereqs_opafm
 {
+	if ("$CUR_DISTRO_VENDOR" eq 'debian') {
+		printf "check_os_prereqs_opafm unimplemented\n";
+		exit(1);
+	}
 	return rpm_check_os_prereqs("opafm", "user");
 }
 
